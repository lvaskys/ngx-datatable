/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../src/components/header/header.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/security';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../../../../src/directives/orderable.directive';
import * as import12 from '@angular/core/src/linker/query_list';
import * as import13 from '@angular/common/src/directives/ng_for';
import * as import14 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import17 from '@angular/common/src/directives/ng_style';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '../../../../src/directives/draggable.directive';
import * as import20 from '../../../../src/directives/resizeable.directive';
import * as import21 from '../../../../src/directives/long-press.directive';
import * as import22 from '../../../../src/components/header/header-cell.component';
import * as import23 from './header-cell.component.ngfactory';
var renderType_DataTableHeaderComponent_Host:import0.RenderComponentType = (null as any);
class _View_DataTableHeaderComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DataTableHeaderComponent_0_4:import3.DataTableHeaderComponent;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderComponent_Host0,renderType_DataTableHeaderComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('datatable-header',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-header');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DataTableHeaderComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableHeaderComponent_0_4 = new import3.DataTableHeaderComponent();
    this._appEl_0.initComponent(this._DataTableHeaderComponent_0_4,[],compView_0);
    compView_0.create(this._DataTableHeaderComponent_0_4,this.projectableNodes,(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.DataTableHeaderComponent) && (0 === requestNodeIndex))) { return this._DataTableHeaderComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._DataTableHeaderComponent_0_4.headerHeight;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_0) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_0).toString()));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._DataTableHeaderComponent_0_4.headerWidth;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_1) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_1).toString()));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableHeaderComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_DataTableHeaderComponent_Host === (null as any))) { (renderType_DataTableHeaderComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_DataTableHeaderComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DataTableHeaderComponentNgFactory:import10.ComponentFactory<import3.DataTableHeaderComponent> = new import10.ComponentFactory<import3.DataTableHeaderComponent>('datatable-header',viewFactory_DataTableHeaderComponent_Host0,import3.DataTableHeaderComponent);
const styles_DataTableHeaderComponent:any[] = [];
var renderType_DataTableHeaderComponent:import0.RenderComponentType = (null as any);
class _View_DataTableHeaderComponent0 extends import1.AppView<import3.DataTableHeaderComponent> {
  _text_0:any;
  _el_1:any;
  _OrderableDirective_1_3:import11.OrderableDirective;
  _query_DraggableDirective_1_0:import12.QueryList<any>;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import2.AppElement;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import13.NgFor;
  _text_4:any;
  _text_5:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderComponent0,renderType_DataTableHeaderComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','datatable-header-inner');
    this.renderer.setElementAttribute(this._el_1,'orderable','');
    this._OrderableDirective_1_3 = new import11.OrderableDirective(this.parentInjector.get(import14.KeyValueDiffers));
    this._query_DraggableDirective_1_0 = new import12.QueryList<any>();
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import2.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import15.TemplateRef_(this._appEl_3,viewFactory_DataTableHeaderComponent1);
    this._NgFor_3_6 = new import13.NgFor(this._appEl_3.vcRef,this._TemplateRef_3_5,this.parentInjector.get(import16.IterableDiffers),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._expr_1 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_1,'reorder',this.eventHandler(this._handle_reorder_1_0.bind(this)));
    const subscription_0:any = this._OrderableDirective_1_3.reorder.subscribe(this.eventHandler(this._handle_reorder_1_0.bind(this)));
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ,[disposable_0],[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import13.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6; }
    if (((token === import11.OrderableDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._OrderableDirective_1_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_2:any = this.context.columnsByPin;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgFor_3_6.ngForOf = currVal_2;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_2,currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.context.trackByGroups;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgFor_3_6.ngForTrackBy = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForTrackBy'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    if ((changes !== (null as any))) { this._NgFor_3_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_3_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) {
      if (this._query_DraggableDirective_1_0.dirty) {
          this._query_DraggableDirective_1_0.reset([this._appEl_3.mapNestedViews(_View_DataTableHeaderComponent1,(nestedView:_View_DataTableHeaderComponent1):any => {
              return [nestedView._appEl_2.mapNestedViews(_View_DataTableHeaderComponent2,(nestedView:_View_DataTableHeaderComponent2):any => {
                return [nestedView._DraggableDirective_0_4];
            })];
        })]);
        this._OrderableDirective_1_3.draggables = this._query_DraggableDirective_1_0;
        this._query_DraggableDirective_1_0.notifyOnChanges();
      }
      if ((this.numberOfChecks === 0)) { this._OrderableDirective_1_3.ngAfterContentInit(); }
    }
    const currVal_1:any = this.context.columnGroupWidths.total;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_1,'width',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_1) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_1).toString() + 'px')));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._OrderableDirective_1_3.ngOnDestroy();
  }
  private _handle_reorder_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onColumnReordered($event)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_DataTableHeaderComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.DataTableHeaderComponent> {
  if ((renderType_DataTableHeaderComponent === (null as any))) { (renderType_DataTableHeaderComponent = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_DataTableHeaderComponent,{})); }
  return new _View_DataTableHeaderComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderComponent1 extends import1.AppView<any> {
  _el_0:any;
  _NgStyle_0_3:import17.NgStyle;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import13.NgFor;
  _text_3:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderComponent1,renderType_DataTableHeaderComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this._NgStyle_0_3 = new import17.NgStyle(this.parent.parentInjector.get(import14.KeyValueDiffers),new import18.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import2.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import15.TemplateRef_(this._appEl_2,viewFactory_DataTableHeaderComponent2);
    this._NgFor_2_6 = new import13.NgFor(this._appEl_2.vcRef,this._TemplateRef_2_5,this.parent.parentInjector.get(import16.IterableDiffers),this.parent.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import13.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6; }
    if (((token === import17.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgStyle_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    const currVal_1:any = this.parent.context.stylesByGroup(this.context.$implicit.type);
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgStyle_0_3.ngStyle = currVal_1;
      this._expr_1 = currVal_1;
    }
    if (!throwOnChange) { this._NgStyle_0_3.ngDoCheck(); }
    changes = (null as any);
    const currVal_2:any = this.context.$implicit.columns;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgFor_2_6.ngForOf = currVal_2;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_2,currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.parent.context.columnTrackingFn;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgFor_2_6.ngForTrackBy = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForTrackBy'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    if ((changes !== (null as any))) { this._NgFor_2_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_2_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = ('datatable-row-' + this.context.$implicit.type);
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableHeaderComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableHeaderComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderComponent2 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DraggableDirective_0_4:import19.DraggableDirective;
  _ResizeableDirective_0_5:import20.ResizeableDirective;
  _LongPressDirective_0_6:import21.LongPressDirective;
  _DataTableHeaderCellComponent_0_7:import22.DataTableHeaderCellComponent;
  _text_1:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  /*private*/ _expr_31:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderComponent2,renderType_DataTableHeaderComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'datatable-header-cell',(null as any));
    this.renderer.setElementAttribute(this._el_0,'draggable','');
    this.renderer.setElementAttribute(this._el_0,'long-press','');
    this.renderer.setElementAttribute(this._el_0,'resizeable','');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import23.viewFactory_DataTableHeaderCellComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DraggableDirective_0_4 = new import19.DraggableDirective(new import18.ElementRef(this._el_0));
    this._ResizeableDirective_0_5 = new import20.ResizeableDirective(new import18.ElementRef(this._el_0));
    this._LongPressDirective_0_6 = new import21.LongPressDirective();
    this._DataTableHeaderCellComponent_0_7 = new import22.DataTableHeaderCellComponent();
    this._appEl_0.initComponent(this._DataTableHeaderCellComponent_0_7,[],compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n        ',(null as any));
    compView_0.create(this._DataTableHeaderCellComponent_0_7,[],(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'resize',this.eventHandler(this._handle_resize_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'longPress',this.eventHandler(this._handle_longPress_0_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_0,'longPressEnd',this.eventHandler(this._handle_longPressEnd_0_2.bind(this)));
    var disposable_3:Function = this.renderer.listen(this._el_0,'sort',this.eventHandler(this._handle_sort_0_3.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_0,'select',this.eventHandler(this._handle_select_0_4.bind(this)));
    var disposable_5:Function = this.renderer.listenGlobal('document','mouseup',this.eventHandler(this._handle_mouseup_0_5.bind(this)));
    var disposable_6:Function = this.renderer.listen(this._el_0,'mousedown',this.eventHandler(this._handle_mousedown_0_6.bind(this)));
    var disposable_7:Function = this.renderer.listen(this._el_0,'mousemove',this.eventHandler(this._handle_mousemove_0_7.bind(this)));
    var disposable_8:Function = this.renderer.listen(this._el_0,'mouseup',this.eventHandler(this._handle_mouseup_0_8.bind(this)));
    this._expr_12 = import7.UNINITIALIZED;
    this._expr_13 = import7.UNINITIALIZED;
    this._expr_14 = import7.UNINITIALIZED;
    this._expr_15 = import7.UNINITIALIZED;
    this._expr_16 = import7.UNINITIALIZED;
    const subscription_0:any = this._ResizeableDirective_0_5.resize.subscribe(this.eventHandler(this._handle_resize_0_0.bind(this)));
    this._expr_17 = import7.UNINITIALIZED;
    this._expr_18 = import7.UNINITIALIZED;
    const subscription_1:any = this._LongPressDirective_0_6.longPress.subscribe(this.eventHandler(this._handle_longPress_0_1.bind(this)));
    const subscription_2:any = this._LongPressDirective_0_6.longPressEnd.subscribe(this.eventHandler(this._handle_longPressEnd_0_2.bind(this)));
    this._expr_19 = import7.UNINITIALIZED;
    this._expr_20 = import7.UNINITIALIZED;
    this._expr_21 = import7.UNINITIALIZED;
    this._expr_22 = import7.UNINITIALIZED;
    this._expr_23 = import7.UNINITIALIZED;
    this._expr_24 = import7.UNINITIALIZED;
    this._expr_25 = import7.UNINITIALIZED;
    this._expr_26 = import7.UNINITIALIZED;
    this._expr_27 = import7.UNINITIALIZED;
    this._expr_28 = import7.UNINITIALIZED;
    this._expr_29 = import7.UNINITIALIZED;
    this._expr_30 = import7.UNINITIALIZED;
    this._expr_31 = import7.UNINITIALIZED;
    const subscription_3:any = this._DataTableHeaderCellComponent_0_7.sort.subscribe(this.eventHandler(this._handle_sort_0_3.bind(this)));
    const subscription_4:any = this._DataTableHeaderCellComponent_0_7.select.subscribe(this.eventHandler(this._handle_select_0_4.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6,
      disposable_7,
      disposable_8
    ]
    ,[
      subscription_0,
      subscription_1,
      subscription_2,
      subscription_3,
      subscription_4
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.DraggableDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DraggableDirective_0_4; }
    if (((token === import20.ResizeableDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._ResizeableDirective_0_5; }
    if (((token === import21.LongPressDirective) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._LongPressDirective_0_6; }
    if (((token === import22.DataTableHeaderCellComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DataTableHeaderCellComponent_0_7; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_12:any = this.context.$implicit;
    if (import4.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this._DraggableDirective_0_4.dragModel = currVal_12;
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = ((this.parent.parent.context.reorderable && this.context.$implicit.draggable) && this.parent.parent.context.drag);
    if (import4.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this._DraggableDirective_0_4.dragX = currVal_13;
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = false;
    if (import4.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this._DraggableDirective_0_4.dragY = currVal_14;
      this._expr_14 = currVal_14;
    }
    const currVal_15:any = this.context.$implicit.resizeable;
    if (import4.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this._ResizeableDirective_0_5.resizeEnabled = currVal_15;
      this._expr_15 = currVal_15;
    }
    const currVal_19:any = this.parent.parent.context.sortType;
    if (import4.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this._DataTableHeaderCellComponent_0_7.sortType = currVal_19;
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this.context.$implicit;
    if (import4.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this._DataTableHeaderCellComponent_0_7.column = currVal_20;
      this._expr_20 = currVal_20;
    }
    const currVal_21:any = this.parent.parent.context.sortAscendingIcon;
    if (import4.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this._DataTableHeaderCellComponent_0_7.sortAscendingIcon = currVal_21;
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = this.parent.parent.context.sortDescendingIcon;
    if (import4.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this._DataTableHeaderCellComponent_0_7.sortDescendingIcon = currVal_22;
      this._expr_22 = currVal_22;
    }
    const currVal_23:any = this.parent.parent.context.selectionType;
    if (import4.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this._DataTableHeaderCellComponent_0_7.selectionType = currVal_23;
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.parent.parent.context.headerHeight;
    if (import4.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this._DataTableHeaderCellComponent_0_7.headerHeight = currVal_24;
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = this.parent.parent.context.sorts;
    if (import4.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this._DataTableHeaderCellComponent_0_7.sorts = currVal_25;
      this._expr_25 = currVal_25;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_16:any = this._ResizeableDirective_0_5.resizeEnabled;
    if (import4.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementClass(this._el_0,'resizeable',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this._LongPressDirective_0_6.press;
    if (import4.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementClass(this._el_0,'press',currVal_17);
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this._LongPressDirective_0_6.isLongPress;
    if (import4.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementClass(this._el_0,'longpress',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_26:any = this._DataTableHeaderCellComponent_0_7.headerHeight;
    if (import4.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_26) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_26).toString() + 'px')));
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = this._DataTableHeaderCellComponent_0_7.columnCssClasses;
    if (import4.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_27);
      this._expr_27 = currVal_27;
    }
    const currVal_28:any = this._DataTableHeaderCellComponent_0_7.name;
    if (import4.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementAttribute(this._el_0,'title',((currVal_28 == (null as any))? (null as any): currVal_28.toString()));
      this._expr_28 = currVal_28;
    }
    const currVal_29:any = this._DataTableHeaderCellComponent_0_7.minWidth;
    if (import4.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementStyle(this._el_0,'minWidth',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_29) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_29).toString() + 'px')));
      this._expr_29 = currVal_29;
    }
    const currVal_30:any = this._DataTableHeaderCellComponent_0_7.maxWidth;
    if (import4.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementStyle(this._el_0,'maxWidth',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_30) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_30).toString() + 'px')));
      this._expr_30 = currVal_30;
    }
    const currVal_31:any = this._DataTableHeaderCellComponent_0_7.width;
    if (import4.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_31) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_31).toString() + 'px')));
      this._expr_31 = currVal_31;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<_View_DataTableHeaderComponent0>this.parent.parent)._query_DraggableDirective_1_0.setDirty();
  }
  destroyInternal():void {
    this._DraggableDirective_0_4.ngOnDestroy();
    this._ResizeableDirective_0_5.ngOnDestroy();
  }
  private _handle_resize_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.parent.context.onColumnResized($event,this.context.$implicit)) !== false);
    return (true && pd_0);
  }
  private _handle_longPress_0_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.parent.context.drag = true)) !== false);
    return (true && pd_0);
  }
  private _handle_longPressEnd_0_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.parent.context.drag = false)) !== false);
    return (true && pd_0);
  }
  private _handle_sort_0_3($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.parent.context.onSort($event)) !== false);
    return (true && pd_0);
  }
  private _handle_select_0_4($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.parent.context.select.emit($event)) !== false);
    return (true && pd_0);
  }
  private _handle_mouseup_0_5($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DraggableDirective_0_4.onMouseup($event)) !== false);
    const pd_1:any = ((<any>this._ResizeableDirective_0_5.onMouseup()) !== false);
    return ((true && pd_0) && pd_1);
  }
  private _handle_mousedown_0_6($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DraggableDirective_0_4.onMousedown($event)) !== false);
    const pd_1:any = ((<any>this._ResizeableDirective_0_5.onMousedown($event)) !== false);
    const pd_2:any = ((<any>this._LongPressDirective_0_6.onMouseDown($event)) !== false);
    return (((true && pd_0) && pd_1) && pd_2);
  }
  private _handle_mousemove_0_7($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._LongPressDirective_0_6.onMouseMove($event)) !== false);
    return (true && pd_0);
  }
  private _handle_mouseup_0_8($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._LongPressDirective_0_6.onMouseUp()) !== false);
    return (true && pd_0);
  }
}
function viewFactory_DataTableHeaderComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableHeaderComponent2(viewUtils,parentInjector,declarationEl);
}