/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../src/components/header/header-cell.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/security';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/common/src/directives/ng_if';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/common/src/directives/ng_template_outlet';
var renderType_DataTableHeaderCellComponent_Host:import0.RenderComponentType = (null as any);
class _View_DataTableHeaderCellComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DataTableHeaderCellComponent_0_4:import3.DataTableHeaderCellComponent;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderCellComponent_Host0,renderType_DataTableHeaderCellComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('datatable-header-cell',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DataTableHeaderCellComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableHeaderCellComponent_0_4 = new import3.DataTableHeaderCellComponent();
    this._appEl_0.initComponent(this._DataTableHeaderCellComponent_0_4,[],compView_0);
    compView_0.create(this._DataTableHeaderCellComponent_0_4,this.projectableNodes,(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.DataTableHeaderCellComponent) && (0 === requestNodeIndex))) { return this._DataTableHeaderCellComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._DataTableHeaderCellComponent_0_4.headerHeight;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_0) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_0).toString() + 'px')));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._DataTableHeaderCellComponent_0_4.columnCssClasses;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this._DataTableHeaderCellComponent_0_4.name;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementAttribute(this._el_0,'title',((currVal_2 == (null as any))? (null as any): currVal_2.toString()));
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._DataTableHeaderCellComponent_0_4.minWidth;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementStyle(this._el_0,'minWidth',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_3) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_3).toString() + 'px')));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._DataTableHeaderCellComponent_0_4.maxWidth;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementStyle(this._el_0,'maxWidth',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_4) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_4).toString() + 'px')));
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._DataTableHeaderCellComponent_0_4.width;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_5) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_5).toString() + 'px')));
      this._expr_5 = currVal_5;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableHeaderCellComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_DataTableHeaderCellComponent_Host === (null as any))) { (renderType_DataTableHeaderCellComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_DataTableHeaderCellComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DataTableHeaderCellComponentNgFactory:import10.ComponentFactory<import3.DataTableHeaderCellComponent> = new import10.ComponentFactory<import3.DataTableHeaderCellComponent>('datatable-header-cell',viewFactory_DataTableHeaderCellComponent_Host0,import3.DataTableHeaderCellComponent);
const styles_DataTableHeaderCellComponent:any[] = [];
var renderType_DataTableHeaderCellComponent:import0.RenderComponentType = (null as any);
class _View_DataTableHeaderCellComponent0 extends import1.AppView<import3.DataTableHeaderCellComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import2.AppElement;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import11.NgIf;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _appEl_5:import2.AppElement;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import11.NgIf;
  _text_6:any;
  _anchor_7:any;
  /*private*/ _appEl_7:import2.AppElement;
  _TemplateRef_7_5:any;
  _NgIf_7_6:import11.NgIf;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _text_11:any;
  _text_12:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderCellComponent0,renderType_DataTableHeaderCellComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import2.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import12.TemplateRef_(this._appEl_3,viewFactory_DataTableHeaderCellComponent1);
    this._NgIf_3_6 = new import11.NgIf(this._appEl_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_5 = new import2.AppElement(5,1,this,this._anchor_5);
    this._TemplateRef_5_5 = new import12.TemplateRef_(this._appEl_5,viewFactory_DataTableHeaderCellComponent2);
    this._NgIf_5_6 = new import11.NgIf(this._appEl_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_7 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_7 = new import2.AppElement(7,1,this,this._anchor_7);
    this._TemplateRef_7_5 = new import12.TemplateRef_(this._appEl_7,viewFactory_DataTableHeaderCellComponent3);
    this._NgIf_7_6 = new import11.NgIf(this._appEl_7.vcRef,this._TemplateRef_7_5);
    this._text_8 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_9 = this.renderer.createElement(this._el_1,'span',(null as any));
    this.renderer.setElementAttribute(this._el_9,'class','sort-btn');
    this._text_10 = this.renderer.createText(this._el_9,'\n      ',(null as any));
    this._text_11 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_12 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._anchor_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._text_12
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import11.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6; }
    if (((token === import12.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import11.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6; }
    if (((token === import12.TemplateRef) && (7 === requestNodeIndex))) { return this._TemplateRef_7_5; }
    if (((token === import11.NgIf) && (7 === requestNodeIndex))) { return this._NgIf_7_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.isCheckboxable;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_3_6.ngIf = currVal_0;
      this._expr_0 = currVal_0;
    }
    const currVal_1:boolean = !this.context.column.headerTemplate;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgIf_5_6.ngIf = currVal_1;
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context.column.headerTemplate;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgIf_7_6.ngIf = currVal_2;
      this._expr_2 = currVal_2;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_3:any = this.context.sortClass;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementProperty(this._el_9,'className',currVal_3);
      this._expr_3 = currVal_3;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_DataTableHeaderCellComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.DataTableHeaderCellComponent> {
  if ((renderType_DataTableHeaderCellComponent === (null as any))) { (renderType_DataTableHeaderCellComponent = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_DataTableHeaderCellComponent,{})); }
  return new _View_DataTableHeaderCellComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderCellComponent1,renderType_DataTableHeaderCellComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'label',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-checkbox');
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'input',(null as any));
    this.renderer.setElementAttribute(this._el_2,'type','checkbox');
    this._text_3 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._expr_1 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_2,'change',this.eventHandler(this._handle_change_2_0.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.parent.context.allRowsSelected;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementAttribute(this._el_2,'checked',((currVal_1 == (null as any))? (null as any): currVal_1.toString()));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_change_2_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.select.emit(!this.parent.context.allRowsSelected)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_DataTableHeaderCellComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableHeaderCellComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent2 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderCellComponent2,renderType_DataTableHeaderCellComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'span',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-header-cell-label draggable');
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._expr_1 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.parent.context.name;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_0,'innerHTML',this.viewUtils.sanitizer.sanitize(import8.SecurityContext.HTML,currVal_1));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.context.onSort()) !== false);
    return (true && pd_0);
  }
}
function viewFactory_DataTableHeaderCellComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableHeaderCellComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent3 extends import1.AppView<any> {
  _anchor_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TemplateRef_0_5:any;
  _NgTemplateOutlet_0_6:import13.NgTemplateOutlet;
  _map_0:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderCellComponent3,renderType_DataTableHeaderCellComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._anchor_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import12.TemplateRef_(this._appEl_0,viewFactory_DataTableHeaderCellComponent4);
    this._NgTemplateOutlet_0_6 = new import13.NgTemplateOutlet(this._appEl_0.vcRef);
    this._map_0 = import4.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        column: p0,
        sortDir: p1
      }
      ;
    });
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._appEl_0]),[this._anchor_0],[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import13.NgTemplateOutlet) && (0 === requestNodeIndex))) { return this._NgTemplateOutlet_0_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this._map_0(this.parent.context.column,this.parent.context.sortDir);
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgTemplateOutlet_0_6.ngOutletContext = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngOutletContext'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.parent.context.column.headerTemplate;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgTemplateOutlet_0_6.ngTemplateOutlet = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngTemplateOutlet'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgTemplateOutlet_0_6.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableHeaderCellComponent3(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableHeaderCellComponent3(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent4 extends import1.AppView<any> {
  _text_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableHeaderCellComponent4,renderType_DataTableHeaderCellComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._text_0 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.init([].concat([this._text_0]),[this._text_0],[],[]);
    return (null as any);
  }
}
function viewFactory_DataTableHeaderCellComponent4(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableHeaderCellComponent4(viewUtils,parentInjector,declarationEl);
}