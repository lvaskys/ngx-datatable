/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../src/components/body/scroller.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/security';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
var renderType_ScrollerComponent_Host:import0.RenderComponentType = (null as any);
class _View_ScrollerComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _ScrollerComponent_0_4:import3.ScrollerComponent;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ScrollerComponent_Host0,renderType_ScrollerComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('datatable-scroller',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-scroll');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_ScrollerComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ScrollerComponent_0_4 = new import3.ScrollerComponent(new import8.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._ScrollerComponent_0_4,[],compView_0);
    compView_0.create(this._ScrollerComponent_0_4,this.projectableNodes,(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.ScrollerComponent) && (0 === requestNodeIndex))) { return this._ScrollerComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._ScrollerComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._ScrollerComponent_0_4.scrollHeight;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_0) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_0).toString() + 'px')));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._ScrollerComponent_0_4.scrollWidth;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_1) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_1).toString() + 'px')));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._ScrollerComponent_0_4.ngOnDestroy();
  }
}
function viewFactory_ScrollerComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_ScrollerComponent_Host === (null as any))) { (renderType_ScrollerComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_ScrollerComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const ScrollerComponentNgFactory:import11.ComponentFactory<import3.ScrollerComponent> = new import11.ComponentFactory<import3.ScrollerComponent>('datatable-scroller',viewFactory_ScrollerComponent_Host0,import3.ScrollerComponent);
const styles_ScrollerComponent:any[] = [];
var renderType_ScrollerComponent:import0.RenderComponentType = (null as any);
class _View_ScrollerComponent0 extends import1.AppView<import3.ScrollerComponent> {
  _text_0:any;
  _text_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ScrollerComponent0,renderType_ScrollerComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.renderer.projectNodes(parentRenderNode,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init([],[
      this._text_0,
      this._text_1
    ]
    ,[],[]);
    return (null as any);
  }
}
export function viewFactory_ScrollerComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.ScrollerComponent> {
  if ((renderType_ScrollerComponent === (null as any))) { (renderType_ScrollerComponent = viewUtils.createRenderComponentType('',1,import10.ViewEncapsulation.None,styles_ScrollerComponent,{})); }
  return new _View_ScrollerComponent0(viewUtils,parentInjector,declarationEl);
}