/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../src/components/body/body-row-wrapper.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/common/src/directives/ng_if';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/core/src/security';
import * as import13 from '@angular/common/src/directives/ng_template_outlet';
var renderType_DataTableRowWrapperComponent_Host:import0.RenderComponentType = (null as any);
class _View_DataTableRowWrapperComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DataTableRowWrapperComponent_0_4:import3.DataTableRowWrapperComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableRowWrapperComponent_Host0,renderType_DataTableRowWrapperComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('datatable-row-wrapper',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-row-wrapper');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DataTableRowWrapperComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableRowWrapperComponent_0_4 = new import3.DataTableRowWrapperComponent();
    this._appEl_0.initComponent(this._DataTableRowWrapperComponent_0_4,[],compView_0);
    compView_0.create(this._DataTableRowWrapperComponent_0_4,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'contextmenu',this.eventHandler(this._handle_contextmenu_0_0.bind(this)));
    this.init([].concat([this._el_0]),[this._el_0],[disposable_0],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.DataTableRowWrapperComponent) && (0 === requestNodeIndex))) { return this._DataTableRowWrapperComponent_0_4; }
    return notFoundResult;
  }
  private _handle_contextmenu_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableRowWrapperComponent_0_4.onContextmenu($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_DataTableRowWrapperComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_DataTableRowWrapperComponent_Host === (null as any))) { (renderType_DataTableRowWrapperComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_DataTableRowWrapperComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DataTableRowWrapperComponentNgFactory:import9.ComponentFactory<import3.DataTableRowWrapperComponent> = new import9.ComponentFactory<import3.DataTableRowWrapperComponent>('datatable-row-wrapper',viewFactory_DataTableRowWrapperComponent_Host0,import3.DataTableRowWrapperComponent);
const styles_DataTableRowWrapperComponent:any[] = [];
var renderType_DataTableRowWrapperComponent:import0.RenderComponentType = (null as any);
class _View_DataTableRowWrapperComponent0 extends import1.AppView<import3.DataTableRowWrapperComponent> {
  _text_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import10.NgIf;
  _text_3:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableRowWrapperComponent0,renderType_DataTableRowWrapperComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.renderer.projectNodes(parentRenderNode,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_2 = new import2.AppElement(2,(null as any),this,this._anchor_2);
    this._TemplateRef_2_5 = new import11.TemplateRef_(this._appEl_2,viewFactory_DataTableRowWrapperComponent1);
    this._NgIf_2_6 = new import10.NgIf(this._appEl_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import10.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.expanded;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_2_6.ngIf = currVal_0;
      this._expr_0 = currVal_0;
    }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_DataTableRowWrapperComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.DataTableRowWrapperComponent> {
  if ((renderType_DataTableRowWrapperComponent === (null as any))) { (renderType_DataTableRowWrapperComponent = viewUtils.createRenderComponentType('',1,import8.ViewEncapsulation.None,styles_DataTableRowWrapperComponent,{})); }
  return new _View_DataTableRowWrapperComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableRowWrapperComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import10.NgIf;
  _text_3:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableRowWrapperComponent1,renderType_DataTableRowWrapperComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-row-detail');
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import2.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import11.TemplateRef_(this._appEl_2,viewFactory_DataTableRowWrapperComponent2);
    this._NgIf_2_6 = new import10.NgIf(this._appEl_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import10.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = this.parent.context.rowDetailTemplate;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgIf_2_6.ngIf = currVal_1;
      this._expr_1 = currVal_1;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this.parent.context.detailRowHeight;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE,currVal_0) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE,currVal_0).toString() + 'px')));
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableRowWrapperComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableRowWrapperComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableRowWrapperComponent2 extends import1.AppView<any> {
  _anchor_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TemplateRef_0_5:any;
  _NgTemplateOutlet_0_6:import13.NgTemplateOutlet;
  _map_0:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableRowWrapperComponent2,renderType_DataTableRowWrapperComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._anchor_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import11.TemplateRef_(this._appEl_0,viewFactory_DataTableRowWrapperComponent3);
    this._NgTemplateOutlet_0_6 = new import13.NgTemplateOutlet(this._appEl_0.vcRef);
    this._map_0 = import4.pureProxy1((p0:any):{[key: string]:any} => {
      return {row: p0};
    });
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._appEl_0]),[this._anchor_0],[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import13.NgTemplateOutlet) && (0 === requestNodeIndex))) { return this._NgTemplateOutlet_0_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this._map_0(this.parent.parent.context.row);
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgTemplateOutlet_0_6.ngOutletContext = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngOutletContext'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.parent.parent.context.rowDetailTemplate;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgTemplateOutlet_0_6.ngTemplateOutlet = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngTemplateOutlet'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgTemplateOutlet_0_6.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableRowWrapperComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableRowWrapperComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableRowWrapperComponent3 extends import1.AppView<any> {
  _text_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableRowWrapperComponent3,renderType_DataTableRowWrapperComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._text_0 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.init([].concat([this._text_0]),[this._text_0],[],[]);
    return (null as any);
  }
}
function viewFactory_DataTableRowWrapperComponent3(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableRowWrapperComponent3(viewUtils,parentInjector,declarationEl);
}