/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../../src/components/body/body-row.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/security';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/common/src/directives/ng_for';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/common/src/directives/ng_style';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '../../../../src/components/body/body-cell.component';
import * as import18 from './body-cell.component.ngfactory';
var renderType_DataTableBodyRowComponent_Host:import0.RenderComponentType = (null as any);
class _View_DataTableBodyRowComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DataTableBodyRowComponent_0_4:import3.DataTableBodyRowComponent;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableBodyRowComponent_Host0,renderType_DataTableBodyRowComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('datatable-body-row',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-body-row');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DataTableBodyRowComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableBodyRowComponent_0_4 = new import3.DataTableBodyRowComponent(new import8.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._DataTableBodyRowComponent_0_4,[],compView_0);
    compView_0.create(this._DataTableBodyRowComponent_0_4,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'keydown',this.eventHandler(this._handle_keydown_0_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[disposable_0],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.DataTableBodyRowComponent) && (0 === requestNodeIndex))) { return this._DataTableBodyRowComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this._DataTableBodyRowComponent_0_4.rowHeight;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_1) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_1).toString() + 'px')));
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this._DataTableBodyRowComponent_0_4.isSelected;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_0,'active',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._DataTableBodyRowComponent_0_4.isEvenRow;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementClass(this._el_0,'datatable-row-even',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._DataTableBodyRowComponent_0_4.isOddRow;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_0,'datatable-row-odd',currVal_4);
      this._expr_4 = currVal_4;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_keydown_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableBodyRowComponent_0_4.onKeyDown($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_DataTableBodyRowComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_DataTableBodyRowComponent_Host === (null as any))) { (renderType_DataTableBodyRowComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_DataTableBodyRowComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DataTableBodyRowComponentNgFactory:import11.ComponentFactory<import3.DataTableBodyRowComponent> = new import11.ComponentFactory<import3.DataTableBodyRowComponent>('datatable-body-row',viewFactory_DataTableBodyRowComponent_Host0,import3.DataTableBodyRowComponent);
const styles_DataTableBodyRowComponent:any[] = [];
var renderType_DataTableBodyRowComponent:import0.RenderComponentType = (null as any);
class _View_DataTableBodyRowComponent0 extends import1.AppView<import3.DataTableBodyRowComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _appEl_1:import2.AppElement;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import12.NgFor;
  _text_2:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableBodyRowComponent0,renderType_DataTableBodyRowComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_1 = new import2.AppElement(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import13.TemplateRef_(this._appEl_1,viewFactory_DataTableBodyRowComponent1);
    this._NgFor_1_6 = new import12.NgFor(this._appEl_1.vcRef,this._TemplateRef_1_5,this.parentInjector.get(import14.IterableDiffers),this.ref);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import12.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this.context.columnsByPin;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_1_6.ngForOf = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.context.trackByGroups;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgFor_1_6.ngForTrackBy = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForTrackBy'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgFor_1_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_1_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_DataTableBodyRowComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.DataTableBodyRowComponent> {
  if ((renderType_DataTableBodyRowComponent === (null as any))) { (renderType_DataTableBodyRowComponent = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_DataTableBodyRowComponent,{})); }
  return new _View_DataTableBodyRowComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableBodyRowComponent1 extends import1.AppView<any> {
  _el_0:any;
  _NgStyle_0_3:import15.NgStyle;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TemplateRef_2_5:any;
  _NgFor_2_6:import12.NgFor;
  _text_3:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableBodyRowComponent1,renderType_DataTableBodyRowComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this._NgStyle_0_3 = new import15.NgStyle(this.parentInjector.get(import16.KeyValueDiffers),new import8.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import2.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import13.TemplateRef_(this._appEl_2,viewFactory_DataTableBodyRowComponent2);
    this._NgFor_2_6 = new import12.NgFor(this._appEl_2.vcRef,this._TemplateRef_2_5,this.parentInjector.get(import14.IterableDiffers),this.parent.ref);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import12.NgFor) && (2 === requestNodeIndex))) { return this._NgFor_2_6; }
    if (((token === import15.NgStyle) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgStyle_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    const currVal_1:any = this.parent.context.stylesByGroup(this.context.$implicit.type);
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgStyle_0_3.ngStyle = currVal_1;
      this._expr_1 = currVal_1;
    }
    if (!throwOnChange) { this._NgStyle_0_3.ngDoCheck(); }
    changes = (null as any);
    const currVal_2:any = this.context.$implicit.columns;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this._NgFor_2_6.ngForOf = currVal_2;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_2,currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this.parent.context.columnTrackingFn;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this._NgFor_2_6.ngForTrackBy = currVal_3;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForTrackBy'] = new import7.SimpleChange(this._expr_3,currVal_3);
      this._expr_3 = currVal_3;
    }
    if ((changes !== (null as any))) { this._NgFor_2_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_2_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import4.interpolate(1,'datatable-row-',this.context.$implicit.type,' datatable-row-group');
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableBodyRowComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableBodyRowComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableBodyRowComponent2 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DataTableBodyCellComponent_0_4:import17.DataTableBodyCellComponent;
  _text_1:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DataTableBodyRowComponent2,renderType_DataTableBodyRowComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'datatable-body-cell',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','datatable-body-cell');
    this.renderer.setElementAttribute(this._el_0,'tabindex','-1');
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import18.viewFactory_DataTableBodyCellComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableBodyCellComponent_0_4 = new import17.DataTableBodyCellComponent(new import8.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._DataTableBodyCellComponent_0_4,[],compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n      ',(null as any));
    compView_0.create(this._DataTableBodyCellComponent_0_4,[],(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'activate',this.eventHandler(this._handle_activate_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'focus',this.eventHandler(this._handle_focus_0_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_0,'blur',this.eventHandler(this._handle_blur_0_2.bind(this)));
    var disposable_3:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_3.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_0,'dblclick',this.eventHandler(this._handle_dblclick_0_4.bind(this)));
    var disposable_5:Function = this.renderer.listen(this._el_0,'keydown',this.eventHandler(this._handle_keydown_0_5.bind(this)));
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this._expr_11 = import7.UNINITIALIZED;
    this._expr_12 = import7.UNINITIALIZED;
    this._expr_13 = import7.UNINITIALIZED;
    this._expr_14 = import7.UNINITIALIZED;
    this._expr_15 = import7.UNINITIALIZED;
    const subscription_0:any = this._DataTableBodyCellComponent_0_4.activate.subscribe(this.eventHandler(this._handle_activate_0_0.bind(this)));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5
    ]
    ,[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.DataTableBodyCellComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DataTableBodyCellComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6:any = this.parent.parent.context.row;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this._DataTableBodyCellComponent_0_4.row = currVal_6;
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context.$implicit;
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this._DataTableBodyCellComponent_0_4.column = currVal_7;
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.parent.parent.context.rowHeight;
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this._DataTableBodyCellComponent_0_4.rowHeight = currVal_8;
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.parent.parent.context.isSelected;
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this._DataTableBodyCellComponent_0_4.isSelected = currVal_9;
      this._expr_9 = currVal_9;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_10:any = this._DataTableBodyCellComponent_0_4.isFocused;
    if (import4.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementClass(this._el_0,'active',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this._DataTableBodyCellComponent_0_4.isSortActive;
    if (import4.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementClass(this._el_0,'sort-active',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this._DataTableBodyCellComponent_0_4.isSortAscending;
    if (import4.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementClass(this._el_0,'sort-asc',currVal_12);
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this._DataTableBodyCellComponent_0_4.isSortDescending;
    if (import4.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementClass(this._el_0,'sort-desc',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this._DataTableBodyCellComponent_0_4.width;
    if (import4.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_14) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_14).toString() + 'px')));
      this._expr_14 = currVal_14;
    }
    const currVal_15:any = this._DataTableBodyCellComponent_0_4.height;
    if (import4.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_15) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import9.SecurityContext.STYLE,currVal_15).toString()));
      this._expr_15 = currVal_15;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_activate_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.parent.parent.context.onActivate($event,this.context.index)) !== false);
    return (true && pd_0);
  }
  private _handle_focus_0_1($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableBodyCellComponent_0_4.onFocus()) !== false);
    return (true && pd_0);
  }
  private _handle_blur_0_2($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableBodyCellComponent_0_4.onBlur()) !== false);
    return (true && pd_0);
  }
  private _handle_click_0_3($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableBodyCellComponent_0_4.onClick($event)) !== false);
    return (true && pd_0);
  }
  private _handle_dblclick_0_4($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableBodyCellComponent_0_4.onDblClick($event)) !== false);
    return (true && pd_0);
  }
  private _handle_keydown_0_5($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DataTableBodyCellComponent_0_4.onKeyDown($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_DataTableBodyRowComponent2(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_DataTableBodyRowComponent2(viewUtils,parentInjector,declarationEl);
}